// This file is part of arduino-cli.
//
// Copyright 2020 ARDUINO SA (http://www.arduino.cc/)
//
// This software is released under the GNU General Public License version 3,
// which covers the main part of arduino-cli.
// The terms of this license can be found at:
// https://www.gnu.org/licenses/gpl-3.0.en.html
//
// You can be released from the requirements of the above licenses by purchasing
// a commercial license. Buying such a license is mandatory if you want to
// modify or otherwise use the software for commercial activities involving the
// Arduino software without disclosing the source code of your own applications.
// To purchase a commercial license, send an email to license@arduino.cc.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: cc/arduino/cli/commands/v1/files.proto

package files

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContentType int32

const (
	ContentType_RAW ContentType = 0
	ContentType_ZIP ContentType = 1
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "RAW",
		1: "ZIP",
	}
	ContentType_value = map[string]int32{
		"RAW": 0,
		"ZIP": 1,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_cc_arduino_cli_commands_v1_files_proto_enumTypes[0].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_cc_arduino_cli_commands_v1_files_proto_enumTypes[0]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_cc_arduino_cli_commands_v1_files_proto_rawDescGZIP(), []int{0}
}

type LoadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// path as it's returned in LoadSketchResponse for instance
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Optional
	Type ContentType `protobuf:"varint,2,opt,name=type,proto3,enum=cc.arduino.cli.commands.v1.ContentType" json:"type,omitempty"`
}

func (x *LoadFileRequest) Reset() {
	*x = LoadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cc_arduino_cli_commands_v1_files_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadFileRequest) ProtoMessage() {}

func (x *LoadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cc_arduino_cli_commands_v1_files_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadFileRequest.ProtoReflect.Descriptor instead.
func (*LoadFileRequest) Descriptor() ([]byte, []int) {
	return file_cc_arduino_cli_commands_v1_files_proto_rawDescGZIP(), []int{0}
}

func (x *LoadFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LoadFileRequest) GetType() ContentType {
	if x != nil {
		return x.Type
	}
	return ContentType_RAW
}

type LoadFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*LoadFileResponse_Content
	//	*LoadFileResponse_Error
	Message isLoadFileResponse_Message `protobuf_oneof:"message"`
	// is skipped in case of error
	Type ContentType `protobuf:"varint,3,opt,name=type,proto3,enum=cc.arduino.cli.commands.v1.ContentType" json:"type,omitempty"`
}

func (x *LoadFileResponse) Reset() {
	*x = LoadFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cc_arduino_cli_commands_v1_files_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadFileResponse) ProtoMessage() {}

func (x *LoadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cc_arduino_cli_commands_v1_files_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadFileResponse.ProtoReflect.Descriptor instead.
func (*LoadFileResponse) Descriptor() ([]byte, []int) {
	return file_cc_arduino_cli_commands_v1_files_proto_rawDescGZIP(), []int{1}
}

func (m *LoadFileResponse) GetMessage() isLoadFileResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *LoadFileResponse) GetContent() []byte {
	if x, ok := x.GetMessage().(*LoadFileResponse_Content); ok {
		return x.Content
	}
	return nil
}

func (x *LoadFileResponse) GetError() *status.Status {
	if x, ok := x.GetMessage().(*LoadFileResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *LoadFileResponse) GetType() ContentType {
	if x != nil {
		return x.Type
	}
	return ContentType_RAW
}

type isLoadFileResponse_Message interface {
	isLoadFileResponse_Message()
}

type LoadFileResponse_Content struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type LoadFileResponse_Error struct {
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*LoadFileResponse_Content) isLoadFileResponse_Message() {}

func (*LoadFileResponse_Error) isLoadFileResponse_Message() {}

var File_cc_arduino_cli_commands_v1_files_proto protoreflect.FileDescriptor

var file_cc_arduino_cli_commands_v1_files_proto_rawDesc = []byte{
	0x0a, 0x26, 0x63, 0x63, 0x2f, 0x61, 0x72, 0x64, 0x75, 0x69, 0x6e, 0x6f, 0x2f, 0x63, 0x6c, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x63, 0x2e, 0x61, 0x72, 0x64,
	0x75, 0x69, 0x6e, 0x6f, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a,
	0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x63, 0x2e, 0x61, 0x72, 0x64, 0x75, 0x69, 0x6e, 0x6f, 0x2e,
	0x63, 0x6c, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63,
	0x63, 0x2e, 0x61, 0x72, 0x64, 0x75, 0x69, 0x6e, 0x6f, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x1f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x41, 0x57, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x5a, 0x49, 0x50, 0x10, 0x01, 0x32, 0x83, 0x01, 0x0a, 0x18, 0x41, 0x72, 0x64, 0x75,
	0x69, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x08, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x2b, 0x2e, 0x63, 0x63, 0x2e, 0x61, 0x72, 0x64, 0x75, 0x69, 0x6e, 0x6f, 0x2e, 0x63, 0x6c,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x63, 0x63, 0x2e, 0x61, 0x72, 0x64, 0x75, 0x69, 0x6e, 0x6f, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x45, 0x5a,
	0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x64, 0x75,
	0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x72, 0x64, 0x75, 0x69, 0x6e, 0x6f, 0x2d, 0x63, 0x6c, 0x69, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x63, 0x63, 0x2f, 0x61, 0x72, 0x64, 0x75, 0x69, 0x6e, 0x6f, 0x2f, 0x63,
	0x6c, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cc_arduino_cli_commands_v1_files_proto_rawDescOnce sync.Once
	file_cc_arduino_cli_commands_v1_files_proto_rawDescData = file_cc_arduino_cli_commands_v1_files_proto_rawDesc
)

func file_cc_arduino_cli_commands_v1_files_proto_rawDescGZIP() []byte {
	file_cc_arduino_cli_commands_v1_files_proto_rawDescOnce.Do(func() {
		file_cc_arduino_cli_commands_v1_files_proto_rawDescData = protoimpl.X.CompressGZIP(file_cc_arduino_cli_commands_v1_files_proto_rawDescData)
	})
	return file_cc_arduino_cli_commands_v1_files_proto_rawDescData
}

var file_cc_arduino_cli_commands_v1_files_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cc_arduino_cli_commands_v1_files_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cc_arduino_cli_commands_v1_files_proto_goTypes = []interface{}{
	(ContentType)(0),         // 0: cc.arduino.cli.commands.v1.ContentType
	(*LoadFileRequest)(nil),  // 1: cc.arduino.cli.commands.v1.LoadFileRequest
	(*LoadFileResponse)(nil), // 2: cc.arduino.cli.commands.v1.LoadFileResponse
	(*status.Status)(nil),    // 3: google.rpc.Status
}
var file_cc_arduino_cli_commands_v1_files_proto_depIdxs = []int32{
	0, // 0: cc.arduino.cli.commands.v1.LoadFileRequest.type:type_name -> cc.arduino.cli.commands.v1.ContentType
	3, // 1: cc.arduino.cli.commands.v1.LoadFileResponse.error:type_name -> google.rpc.Status
	0, // 2: cc.arduino.cli.commands.v1.LoadFileResponse.type:type_name -> cc.arduino.cli.commands.v1.ContentType
	1, // 3: cc.arduino.cli.commands.v1.ArduinoFileSystemService.LoadFile:input_type -> cc.arduino.cli.commands.v1.LoadFileRequest
	2, // 4: cc.arduino.cli.commands.v1.ArduinoFileSystemService.LoadFile:output_type -> cc.arduino.cli.commands.v1.LoadFileResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cc_arduino_cli_commands_v1_files_proto_init() }
func file_cc_arduino_cli_commands_v1_files_proto_init() {
	if File_cc_arduino_cli_commands_v1_files_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cc_arduino_cli_commands_v1_files_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cc_arduino_cli_commands_v1_files_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cc_arduino_cli_commands_v1_files_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LoadFileResponse_Content)(nil),
		(*LoadFileResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cc_arduino_cli_commands_v1_files_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cc_arduino_cli_commands_v1_files_proto_goTypes,
		DependencyIndexes: file_cc_arduino_cli_commands_v1_files_proto_depIdxs,
		EnumInfos:         file_cc_arduino_cli_commands_v1_files_proto_enumTypes,
		MessageInfos:      file_cc_arduino_cli_commands_v1_files_proto_msgTypes,
	}.Build()
	File_cc_arduino_cli_commands_v1_files_proto = out.File
	file_cc_arduino_cli_commands_v1_files_proto_rawDesc = nil
	file_cc_arduino_cli_commands_v1_files_proto_goTypes = nil
	file_cc_arduino_cli_commands_v1_files_proto_depIdxs = nil
}
