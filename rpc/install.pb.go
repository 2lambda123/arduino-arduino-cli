// Code generated by protoc-gen-go. DO NOT EDIT.
// source: install.proto

package rpc // import "github.com/arduino/arduino-cli/rpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InstallReq struct {
	Instance             *Instance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InstallReq) Reset()         { *m = InstallReq{} }
func (m *InstallReq) String() string { return proto.CompactTextString(m) }
func (*InstallReq) ProtoMessage()    {}
func (*InstallReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_install_c6d782784eed132f, []int{0}
}
func (m *InstallReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallReq.Unmarshal(m, b)
}
func (m *InstallReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallReq.Marshal(b, m, deterministic)
}
func (dst *InstallReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallReq.Merge(dst, src)
}
func (m *InstallReq) XXX_Size() int {
	return xxx_messageInfo_InstallReq.Size(m)
}
func (m *InstallReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstallReq proto.InternalMessageInfo

func (m *InstallReq) GetInstance() *Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

type InstallResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallResp) Reset()         { *m = InstallResp{} }
func (m *InstallResp) String() string { return proto.CompactTextString(m) }
func (*InstallResp) ProtoMessage()    {}
func (*InstallResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_install_c6d782784eed132f, []int{1}
}
func (m *InstallResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallResp.Unmarshal(m, b)
}
func (m *InstallResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallResp.Marshal(b, m, deterministic)
}
func (dst *InstallResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallResp.Merge(dst, src)
}
func (m *InstallResp) XXX_Size() int {
	return xxx_messageInfo_InstallResp.Size(m)
}
func (m *InstallResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallResp.DiscardUnknown(m)
}

var xxx_messageInfo_InstallResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*InstallReq)(nil), "arduino.InstallReq")
	proto.RegisterType((*InstallResp)(nil), "arduino.InstallResp")
}

func init() { proto.RegisterFile("install.proto", fileDescriptor_install_c6d782784eed132f) }

var fileDescriptor_install_c6d782784eed132f = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0xcc, 0x2b, 0x2e,
	0x49, 0xcc, 0xc9, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0x2c, 0x4a, 0x29, 0xcd,
	0xcc, 0xcb, 0x97, 0xe2, 0x49, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x83, 0x08, 0x2b, 0x59, 0x73, 0x71,
	0x79, 0x42, 0xd4, 0x05, 0xa5, 0x16, 0x0a, 0xe9, 0x72, 0x71, 0x80, 0x75, 0xe5, 0x25, 0xa7, 0x4a,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x09, 0xea, 0x41, 0xf5, 0xe9, 0x79, 0x42, 0x25, 0x82, 0xe0,
	0x4a, 0x94, 0x78, 0xb9, 0xb8, 0xe1, 0x9a, 0x8b, 0x0b, 0x9c, 0x54, 0xa2, 0x94, 0xd2, 0x33, 0x4b,
	0x32, 0x4a, 0x93, 0xf4, 0x80, 0x56, 0xe8, 0x43, 0xf5, 0xc1, 0x68, 0xdd, 0xe4, 0x9c, 0x4c, 0xfd,
	0xa2, 0x82, 0xe4, 0x24, 0x36, 0xb0, 0xc5, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x4d,
	0xef, 0xb3, 0xa0, 0x00, 0x00, 0x00,
}
