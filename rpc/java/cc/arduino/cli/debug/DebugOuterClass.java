// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: debug/debug.proto

package cc.arduino.cli.debug;

public final class DebugOuterClass {
  private DebugOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DebugReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cc.arduino.cli.debug.DebugReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Provides information to the debug that specifies which is the target.
     * The first `StreamingOpenReq` message must contain a `DebugReq`
     * message.
     * </pre>
     *
     * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
     * @return Whether the debugReq field is set.
     */
    boolean hasDebugReq();
    /**
     * <pre>
     * Provides information to the debug that specifies which is the target.
     * The first `StreamingOpenReq` message must contain a `DebugReq`
     * message.
     * </pre>
     *
     * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
     * @return The debugReq.
     */
    cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq getDebugReq();
    /**
     * <pre>
     * Provides information to the debug that specifies which is the target.
     * The first `StreamingOpenReq` message must contain a `DebugReq`
     * message.
     * </pre>
     *
     * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
     */
    cc.arduino.cli.debug.DebugOuterClass.DebugConfigReqOrBuilder getDebugReqOrBuilder();

    /**
     * <pre>
     * The data to be sent to the target being monitored.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     * Set this to true to send and Interrupt signal to the debugger process
     * </pre>
     *
     * <code>bool send_interrupt = 3;</code>
     * @return The sendInterrupt.
     */
    boolean getSendInterrupt();
  }
  /**
   * <pre>
   * The top-level message sent by the client for the `Debug` method.
   * Multiple `DebugReq` messages can be sent but the first message
   * must contain a `DebugReq` message to initialize the debug session.
   * All subsequent messages must contain bytes to be sent to the debug session
   * and must not contain a `DebugReq` message.
   * </pre>
   *
   * Protobuf type {@code cc.arduino.cli.debug.DebugReq}
   */
  public  static final class DebugReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cc.arduino.cli.debug.DebugReq)
      DebugReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DebugReq.newBuilder() to construct.
    private DebugReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugReq() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DebugReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.Builder subBuilder = null;
              if (debugReq_ != null) {
                subBuilder = debugReq_.toBuilder();
              }
              debugReq_ = input.readMessage(cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(debugReq_);
                debugReq_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            case 24: {

              sendInterrupt_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.arduino.cli.debug.DebugOuterClass.DebugReq.class, cc.arduino.cli.debug.DebugOuterClass.DebugReq.Builder.class);
    }

    public static final int DEBUGREQ_FIELD_NUMBER = 1;
    private cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq debugReq_;
    /**
     * <pre>
     * Provides information to the debug that specifies which is the target.
     * The first `StreamingOpenReq` message must contain a `DebugReq`
     * message.
     * </pre>
     *
     * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
     * @return Whether the debugReq field is set.
     */
    public boolean hasDebugReq() {
      return debugReq_ != null;
    }
    /**
     * <pre>
     * Provides information to the debug that specifies which is the target.
     * The first `StreamingOpenReq` message must contain a `DebugReq`
     * message.
     * </pre>
     *
     * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
     * @return The debugReq.
     */
    public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq getDebugReq() {
      return debugReq_ == null ? cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.getDefaultInstance() : debugReq_;
    }
    /**
     * <pre>
     * Provides information to the debug that specifies which is the target.
     * The first `StreamingOpenReq` message must contain a `DebugReq`
     * message.
     * </pre>
     *
     * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
     */
    public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReqOrBuilder getDebugReqOrBuilder() {
      return getDebugReq();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * The data to be sent to the target being monitored.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int SEND_INTERRUPT_FIELD_NUMBER = 3;
    private boolean sendInterrupt_;
    /**
     * <pre>
     * Set this to true to send and Interrupt signal to the debugger process
     * </pre>
     *
     * <code>bool send_interrupt = 3;</code>
     * @return The sendInterrupt.
     */
    public boolean getSendInterrupt() {
      return sendInterrupt_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (debugReq_ != null) {
        output.writeMessage(1, getDebugReq());
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      if (sendInterrupt_ != false) {
        output.writeBool(3, sendInterrupt_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (debugReq_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDebugReq());
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (sendInterrupt_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, sendInterrupt_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cc.arduino.cli.debug.DebugOuterClass.DebugReq)) {
        return super.equals(obj);
      }
      cc.arduino.cli.debug.DebugOuterClass.DebugReq other = (cc.arduino.cli.debug.DebugOuterClass.DebugReq) obj;

      if (hasDebugReq() != other.hasDebugReq()) return false;
      if (hasDebugReq()) {
        if (!getDebugReq()
            .equals(other.getDebugReq())) return false;
      }
      if (!getData()
          .equals(other.getData())) return false;
      if (getSendInterrupt()
          != other.getSendInterrupt()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDebugReq()) {
        hash = (37 * hash) + DEBUGREQ_FIELD_NUMBER;
        hash = (53 * hash) + getDebugReq().hashCode();
      }
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + SEND_INTERRUPT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSendInterrupt());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cc.arduino.cli.debug.DebugOuterClass.DebugReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The top-level message sent by the client for the `Debug` method.
     * Multiple `DebugReq` messages can be sent but the first message
     * must contain a `DebugReq` message to initialize the debug session.
     * All subsequent messages must contain bytes to be sent to the debug session
     * and must not contain a `DebugReq` message.
     * </pre>
     *
     * Protobuf type {@code cc.arduino.cli.debug.DebugReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cc.arduino.cli.debug.DebugReq)
        cc.arduino.cli.debug.DebugOuterClass.DebugReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.arduino.cli.debug.DebugOuterClass.DebugReq.class, cc.arduino.cli.debug.DebugOuterClass.DebugReq.Builder.class);
      }

      // Construct using cc.arduino.cli.debug.DebugOuterClass.DebugReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (debugReqBuilder_ == null) {
          debugReq_ = null;
        } else {
          debugReq_ = null;
          debugReqBuilder_ = null;
        }
        data_ = com.google.protobuf.ByteString.EMPTY;

        sendInterrupt_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugReq_descriptor;
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugReq getDefaultInstanceForType() {
        return cc.arduino.cli.debug.DebugOuterClass.DebugReq.getDefaultInstance();
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugReq build() {
        cc.arduino.cli.debug.DebugOuterClass.DebugReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugReq buildPartial() {
        cc.arduino.cli.debug.DebugOuterClass.DebugReq result = new cc.arduino.cli.debug.DebugOuterClass.DebugReq(this);
        if (debugReqBuilder_ == null) {
          result.debugReq_ = debugReq_;
        } else {
          result.debugReq_ = debugReqBuilder_.build();
        }
        result.data_ = data_;
        result.sendInterrupt_ = sendInterrupt_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.arduino.cli.debug.DebugOuterClass.DebugReq) {
          return mergeFrom((cc.arduino.cli.debug.DebugOuterClass.DebugReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.arduino.cli.debug.DebugOuterClass.DebugReq other) {
        if (other == cc.arduino.cli.debug.DebugOuterClass.DebugReq.getDefaultInstance()) return this;
        if (other.hasDebugReq()) {
          mergeDebugReq(other.getDebugReq());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (other.getSendInterrupt() != false) {
          setSendInterrupt(other.getSendInterrupt());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.arduino.cli.debug.DebugOuterClass.DebugReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.arduino.cli.debug.DebugOuterClass.DebugReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq debugReq_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq, cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.Builder, cc.arduino.cli.debug.DebugOuterClass.DebugConfigReqOrBuilder> debugReqBuilder_;
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       * @return Whether the debugReq field is set.
       */
      public boolean hasDebugReq() {
        return debugReqBuilder_ != null || debugReq_ != null;
      }
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       * @return The debugReq.
       */
      public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq getDebugReq() {
        if (debugReqBuilder_ == null) {
          return debugReq_ == null ? cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.getDefaultInstance() : debugReq_;
        } else {
          return debugReqBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       */
      public Builder setDebugReq(cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq value) {
        if (debugReqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          debugReq_ = value;
          onChanged();
        } else {
          debugReqBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       */
      public Builder setDebugReq(
          cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.Builder builderForValue) {
        if (debugReqBuilder_ == null) {
          debugReq_ = builderForValue.build();
          onChanged();
        } else {
          debugReqBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       */
      public Builder mergeDebugReq(cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq value) {
        if (debugReqBuilder_ == null) {
          if (debugReq_ != null) {
            debugReq_ =
              cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.newBuilder(debugReq_).mergeFrom(value).buildPartial();
          } else {
            debugReq_ = value;
          }
          onChanged();
        } else {
          debugReqBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       */
      public Builder clearDebugReq() {
        if (debugReqBuilder_ == null) {
          debugReq_ = null;
          onChanged();
        } else {
          debugReq_ = null;
          debugReqBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       */
      public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.Builder getDebugReqBuilder() {
        
        onChanged();
        return getDebugReqFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       */
      public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReqOrBuilder getDebugReqOrBuilder() {
        if (debugReqBuilder_ != null) {
          return debugReqBuilder_.getMessageOrBuilder();
        } else {
          return debugReq_ == null ?
              cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.getDefaultInstance() : debugReq_;
        }
      }
      /**
       * <pre>
       * Provides information to the debug that specifies which is the target.
       * The first `StreamingOpenReq` message must contain a `DebugReq`
       * message.
       * </pre>
       *
       * <code>.cc.arduino.cli.debug.DebugConfigReq debugReq = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq, cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.Builder, cc.arduino.cli.debug.DebugOuterClass.DebugConfigReqOrBuilder> 
          getDebugReqFieldBuilder() {
        if (debugReqBuilder_ == null) {
          debugReqBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq, cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.Builder, cc.arduino.cli.debug.DebugOuterClass.DebugConfigReqOrBuilder>(
                  getDebugReq(),
                  getParentForChildren(),
                  isClean());
          debugReq_ = null;
        }
        return debugReqBuilder_;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The data to be sent to the target being monitored.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * The data to be sent to the target being monitored.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data to be sent to the target being monitored.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private boolean sendInterrupt_ ;
      /**
       * <pre>
       * Set this to true to send and Interrupt signal to the debugger process
       * </pre>
       *
       * <code>bool send_interrupt = 3;</code>
       * @return The sendInterrupt.
       */
      public boolean getSendInterrupt() {
        return sendInterrupt_;
      }
      /**
       * <pre>
       * Set this to true to send and Interrupt signal to the debugger process
       * </pre>
       *
       * <code>bool send_interrupt = 3;</code>
       * @param value The sendInterrupt to set.
       * @return This builder for chaining.
       */
      public Builder setSendInterrupt(boolean value) {
        
        sendInterrupt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set this to true to send and Interrupt signal to the debugger process
       * </pre>
       *
       * <code>bool send_interrupt = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSendInterrupt() {
        
        sendInterrupt_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cc.arduino.cli.debug.DebugReq)
    }

    // @@protoc_insertion_point(class_scope:cc.arduino.cli.debug.DebugReq)
    private static final cc.arduino.cli.debug.DebugOuterClass.DebugReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cc.arduino.cli.debug.DebugOuterClass.DebugReq();
    }

    public static cc.arduino.cli.debug.DebugOuterClass.DebugReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DebugReq>
        PARSER = new com.google.protobuf.AbstractParser<DebugReq>() {
      @java.lang.Override
      public DebugReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DebugReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cc.arduino.cli.debug.DebugOuterClass.DebugReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugConfigReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cc.arduino.cli.debug.DebugConfigReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
     * @return Whether the instance field is set.
     */
    boolean hasInstance();
    /**
     * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
     * @return The instance.
     */
    cc.arduino.cli.commands.Common.Instance getInstance();
    /**
     * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
     */
    cc.arduino.cli.commands.Common.InstanceOrBuilder getInstanceOrBuilder();

    /**
     * <code>string fqbn = 2;</code>
     * @return The fqbn.
     */
    java.lang.String getFqbn();
    /**
     * <code>string fqbn = 2;</code>
     * @return The bytes for fqbn.
     */
    com.google.protobuf.ByteString
        getFqbnBytes();

    /**
     * <code>string sketch_path = 3;</code>
     * @return The sketchPath.
     */
    java.lang.String getSketchPath();
    /**
     * <code>string sketch_path = 3;</code>
     * @return The bytes for sketchPath.
     */
    com.google.protobuf.ByteString
        getSketchPathBytes();

    /**
     * <code>string port = 4;</code>
     * @return The port.
     */
    java.lang.String getPort();
    /**
     * <code>string port = 4;</code>
     * @return The bytes for port.
     */
    com.google.protobuf.ByteString
        getPortBytes();

    /**
     * <code>string interpreter = 5;</code>
     * @return The interpreter.
     */
    java.lang.String getInterpreter();
    /**
     * <code>string interpreter = 5;</code>
     * @return The bytes for interpreter.
     */
    com.google.protobuf.ByteString
        getInterpreterBytes();

    /**
     * <code>bool verbose = 6;</code>
     * @return The verbose.
     */
    boolean getVerbose();

    /**
     * <code>string import_file = 7;</code>
     * @return The importFile.
     */
    java.lang.String getImportFile();
    /**
     * <code>string import_file = 7;</code>
     * @return The bytes for importFile.
     */
    com.google.protobuf.ByteString
        getImportFileBytes();
  }
  /**
   * Protobuf type {@code cc.arduino.cli.debug.DebugConfigReq}
   */
  public  static final class DebugConfigReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cc.arduino.cli.debug.DebugConfigReq)
      DebugConfigReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DebugConfigReq.newBuilder() to construct.
    private DebugConfigReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugConfigReq() {
      fqbn_ = "";
      sketchPath_ = "";
      port_ = "";
      interpreter_ = "";
      importFile_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DebugConfigReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugConfigReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              cc.arduino.cli.commands.Common.Instance.Builder subBuilder = null;
              if (instance_ != null) {
                subBuilder = instance_.toBuilder();
              }
              instance_ = input.readMessage(cc.arduino.cli.commands.Common.Instance.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(instance_);
                instance_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              fqbn_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              sketchPath_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              port_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              interpreter_ = s;
              break;
            }
            case 48: {

              verbose_ = input.readBool();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              importFile_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugConfigReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugConfigReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.class, cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.Builder.class);
    }

    public static final int INSTANCE_FIELD_NUMBER = 1;
    private cc.arduino.cli.commands.Common.Instance instance_;
    /**
     * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
     * @return Whether the instance field is set.
     */
    public boolean hasInstance() {
      return instance_ != null;
    }
    /**
     * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
     * @return The instance.
     */
    public cc.arduino.cli.commands.Common.Instance getInstance() {
      return instance_ == null ? cc.arduino.cli.commands.Common.Instance.getDefaultInstance() : instance_;
    }
    /**
     * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
     */
    public cc.arduino.cli.commands.Common.InstanceOrBuilder getInstanceOrBuilder() {
      return getInstance();
    }

    public static final int FQBN_FIELD_NUMBER = 2;
    private volatile java.lang.Object fqbn_;
    /**
     * <code>string fqbn = 2;</code>
     * @return The fqbn.
     */
    public java.lang.String getFqbn() {
      java.lang.Object ref = fqbn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fqbn_ = s;
        return s;
      }
    }
    /**
     * <code>string fqbn = 2;</code>
     * @return The bytes for fqbn.
     */
    public com.google.protobuf.ByteString
        getFqbnBytes() {
      java.lang.Object ref = fqbn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fqbn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SKETCH_PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object sketchPath_;
    /**
     * <code>string sketch_path = 3;</code>
     * @return The sketchPath.
     */
    public java.lang.String getSketchPath() {
      java.lang.Object ref = sketchPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sketchPath_ = s;
        return s;
      }
    }
    /**
     * <code>string sketch_path = 3;</code>
     * @return The bytes for sketchPath.
     */
    public com.google.protobuf.ByteString
        getSketchPathBytes() {
      java.lang.Object ref = sketchPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sketchPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private volatile java.lang.Object port_;
    /**
     * <code>string port = 4;</code>
     * @return The port.
     */
    public java.lang.String getPort() {
      java.lang.Object ref = port_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        port_ = s;
        return s;
      }
    }
    /**
     * <code>string port = 4;</code>
     * @return The bytes for port.
     */
    public com.google.protobuf.ByteString
        getPortBytes() {
      java.lang.Object ref = port_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        port_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERPRETER_FIELD_NUMBER = 5;
    private volatile java.lang.Object interpreter_;
    /**
     * <code>string interpreter = 5;</code>
     * @return The interpreter.
     */
    public java.lang.String getInterpreter() {
      java.lang.Object ref = interpreter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        interpreter_ = s;
        return s;
      }
    }
    /**
     * <code>string interpreter = 5;</code>
     * @return The bytes for interpreter.
     */
    public com.google.protobuf.ByteString
        getInterpreterBytes() {
      java.lang.Object ref = interpreter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        interpreter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERBOSE_FIELD_NUMBER = 6;
    private boolean verbose_;
    /**
     * <code>bool verbose = 6;</code>
     * @return The verbose.
     */
    public boolean getVerbose() {
      return verbose_;
    }

    public static final int IMPORT_FILE_FIELD_NUMBER = 7;
    private volatile java.lang.Object importFile_;
    /**
     * <code>string import_file = 7;</code>
     * @return The importFile.
     */
    public java.lang.String getImportFile() {
      java.lang.Object ref = importFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        importFile_ = s;
        return s;
      }
    }
    /**
     * <code>string import_file = 7;</code>
     * @return The bytes for importFile.
     */
    public com.google.protobuf.ByteString
        getImportFileBytes() {
      java.lang.Object ref = importFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        importFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (instance_ != null) {
        output.writeMessage(1, getInstance());
      }
      if (!getFqbnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fqbn_);
      }
      if (!getSketchPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sketchPath_);
      }
      if (!getPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, port_);
      }
      if (!getInterpreterBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, interpreter_);
      }
      if (verbose_ != false) {
        output.writeBool(6, verbose_);
      }
      if (!getImportFileBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, importFile_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (instance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInstance());
      }
      if (!getFqbnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fqbn_);
      }
      if (!getSketchPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sketchPath_);
      }
      if (!getPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, port_);
      }
      if (!getInterpreterBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, interpreter_);
      }
      if (verbose_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, verbose_);
      }
      if (!getImportFileBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, importFile_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq)) {
        return super.equals(obj);
      }
      cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq other = (cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq) obj;

      if (hasInstance() != other.hasInstance()) return false;
      if (hasInstance()) {
        if (!getInstance()
            .equals(other.getInstance())) return false;
      }
      if (!getFqbn()
          .equals(other.getFqbn())) return false;
      if (!getSketchPath()
          .equals(other.getSketchPath())) return false;
      if (!getPort()
          .equals(other.getPort())) return false;
      if (!getInterpreter()
          .equals(other.getInterpreter())) return false;
      if (getVerbose()
          != other.getVerbose()) return false;
      if (!getImportFile()
          .equals(other.getImportFile())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInstance()) {
        hash = (37 * hash) + INSTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getInstance().hashCode();
      }
      hash = (37 * hash) + FQBN_FIELD_NUMBER;
      hash = (53 * hash) + getFqbn().hashCode();
      hash = (37 * hash) + SKETCH_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getSketchPath().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort().hashCode();
      hash = (37 * hash) + INTERPRETER_FIELD_NUMBER;
      hash = (53 * hash) + getInterpreter().hashCode();
      hash = (37 * hash) + VERBOSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getVerbose());
      hash = (37 * hash) + IMPORT_FILE_FIELD_NUMBER;
      hash = (53 * hash) + getImportFile().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cc.arduino.cli.debug.DebugConfigReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cc.arduino.cli.debug.DebugConfigReq)
        cc.arduino.cli.debug.DebugOuterClass.DebugConfigReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugConfigReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugConfigReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.class, cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.Builder.class);
      }

      // Construct using cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (instanceBuilder_ == null) {
          instance_ = null;
        } else {
          instance_ = null;
          instanceBuilder_ = null;
        }
        fqbn_ = "";

        sketchPath_ = "";

        port_ = "";

        interpreter_ = "";

        verbose_ = false;

        importFile_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugConfigReq_descriptor;
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq getDefaultInstanceForType() {
        return cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.getDefaultInstance();
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq build() {
        cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq buildPartial() {
        cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq result = new cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq(this);
        if (instanceBuilder_ == null) {
          result.instance_ = instance_;
        } else {
          result.instance_ = instanceBuilder_.build();
        }
        result.fqbn_ = fqbn_;
        result.sketchPath_ = sketchPath_;
        result.port_ = port_;
        result.interpreter_ = interpreter_;
        result.verbose_ = verbose_;
        result.importFile_ = importFile_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq) {
          return mergeFrom((cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq other) {
        if (other == cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq.getDefaultInstance()) return this;
        if (other.hasInstance()) {
          mergeInstance(other.getInstance());
        }
        if (!other.getFqbn().isEmpty()) {
          fqbn_ = other.fqbn_;
          onChanged();
        }
        if (!other.getSketchPath().isEmpty()) {
          sketchPath_ = other.sketchPath_;
          onChanged();
        }
        if (!other.getPort().isEmpty()) {
          port_ = other.port_;
          onChanged();
        }
        if (!other.getInterpreter().isEmpty()) {
          interpreter_ = other.interpreter_;
          onChanged();
        }
        if (other.getVerbose() != false) {
          setVerbose(other.getVerbose());
        }
        if (!other.getImportFile().isEmpty()) {
          importFile_ = other.importFile_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cc.arduino.cli.commands.Common.Instance instance_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cc.arduino.cli.commands.Common.Instance, cc.arduino.cli.commands.Common.Instance.Builder, cc.arduino.cli.commands.Common.InstanceOrBuilder> instanceBuilder_;
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       * @return Whether the instance field is set.
       */
      public boolean hasInstance() {
        return instanceBuilder_ != null || instance_ != null;
      }
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       * @return The instance.
       */
      public cc.arduino.cli.commands.Common.Instance getInstance() {
        if (instanceBuilder_ == null) {
          return instance_ == null ? cc.arduino.cli.commands.Common.Instance.getDefaultInstance() : instance_;
        } else {
          return instanceBuilder_.getMessage();
        }
      }
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       */
      public Builder setInstance(cc.arduino.cli.commands.Common.Instance value) {
        if (instanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          instance_ = value;
          onChanged();
        } else {
          instanceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       */
      public Builder setInstance(
          cc.arduino.cli.commands.Common.Instance.Builder builderForValue) {
        if (instanceBuilder_ == null) {
          instance_ = builderForValue.build();
          onChanged();
        } else {
          instanceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       */
      public Builder mergeInstance(cc.arduino.cli.commands.Common.Instance value) {
        if (instanceBuilder_ == null) {
          if (instance_ != null) {
            instance_ =
              cc.arduino.cli.commands.Common.Instance.newBuilder(instance_).mergeFrom(value).buildPartial();
          } else {
            instance_ = value;
          }
          onChanged();
        } else {
          instanceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       */
      public Builder clearInstance() {
        if (instanceBuilder_ == null) {
          instance_ = null;
          onChanged();
        } else {
          instance_ = null;
          instanceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       */
      public cc.arduino.cli.commands.Common.Instance.Builder getInstanceBuilder() {
        
        onChanged();
        return getInstanceFieldBuilder().getBuilder();
      }
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       */
      public cc.arduino.cli.commands.Common.InstanceOrBuilder getInstanceOrBuilder() {
        if (instanceBuilder_ != null) {
          return instanceBuilder_.getMessageOrBuilder();
        } else {
          return instance_ == null ?
              cc.arduino.cli.commands.Common.Instance.getDefaultInstance() : instance_;
        }
      }
      /**
       * <code>.cc.arduino.cli.commands.Instance instance = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cc.arduino.cli.commands.Common.Instance, cc.arduino.cli.commands.Common.Instance.Builder, cc.arduino.cli.commands.Common.InstanceOrBuilder> 
          getInstanceFieldBuilder() {
        if (instanceBuilder_ == null) {
          instanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cc.arduino.cli.commands.Common.Instance, cc.arduino.cli.commands.Common.Instance.Builder, cc.arduino.cli.commands.Common.InstanceOrBuilder>(
                  getInstance(),
                  getParentForChildren(),
                  isClean());
          instance_ = null;
        }
        return instanceBuilder_;
      }

      private java.lang.Object fqbn_ = "";
      /**
       * <code>string fqbn = 2;</code>
       * @return The fqbn.
       */
      public java.lang.String getFqbn() {
        java.lang.Object ref = fqbn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fqbn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fqbn = 2;</code>
       * @return The bytes for fqbn.
       */
      public com.google.protobuf.ByteString
          getFqbnBytes() {
        java.lang.Object ref = fqbn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fqbn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fqbn = 2;</code>
       * @param value The fqbn to set.
       * @return This builder for chaining.
       */
      public Builder setFqbn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fqbn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string fqbn = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFqbn() {
        
        fqbn_ = getDefaultInstance().getFqbn();
        onChanged();
        return this;
      }
      /**
       * <code>string fqbn = 2;</code>
       * @param value The bytes for fqbn to set.
       * @return This builder for chaining.
       */
      public Builder setFqbnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fqbn_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sketchPath_ = "";
      /**
       * <code>string sketch_path = 3;</code>
       * @return The sketchPath.
       */
      public java.lang.String getSketchPath() {
        java.lang.Object ref = sketchPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sketchPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sketch_path = 3;</code>
       * @return The bytes for sketchPath.
       */
      public com.google.protobuf.ByteString
          getSketchPathBytes() {
        java.lang.Object ref = sketchPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sketchPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sketch_path = 3;</code>
       * @param value The sketchPath to set.
       * @return This builder for chaining.
       */
      public Builder setSketchPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sketchPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sketch_path = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSketchPath() {
        
        sketchPath_ = getDefaultInstance().getSketchPath();
        onChanged();
        return this;
      }
      /**
       * <code>string sketch_path = 3;</code>
       * @param value The bytes for sketchPath to set.
       * @return This builder for chaining.
       */
      public Builder setSketchPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sketchPath_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object port_ = "";
      /**
       * <code>string port = 4;</code>
       * @return The port.
       */
      public java.lang.String getPort() {
        java.lang.Object ref = port_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          port_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string port = 4;</code>
       * @return The bytes for port.
       */
      public com.google.protobuf.ByteString
          getPortBytes() {
        java.lang.Object ref = port_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          port_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string port = 4;</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string port = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        
        port_ = getDefaultInstance().getPort();
        onChanged();
        return this;
      }
      /**
       * <code>string port = 4;</code>
       * @param value The bytes for port to set.
       * @return This builder for chaining.
       */
      public Builder setPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        port_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object interpreter_ = "";
      /**
       * <code>string interpreter = 5;</code>
       * @return The interpreter.
       */
      public java.lang.String getInterpreter() {
        java.lang.Object ref = interpreter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          interpreter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string interpreter = 5;</code>
       * @return The bytes for interpreter.
       */
      public com.google.protobuf.ByteString
          getInterpreterBytes() {
        java.lang.Object ref = interpreter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          interpreter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string interpreter = 5;</code>
       * @param value The interpreter to set.
       * @return This builder for chaining.
       */
      public Builder setInterpreter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        interpreter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string interpreter = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterpreter() {
        
        interpreter_ = getDefaultInstance().getInterpreter();
        onChanged();
        return this;
      }
      /**
       * <code>string interpreter = 5;</code>
       * @param value The bytes for interpreter to set.
       * @return This builder for chaining.
       */
      public Builder setInterpreterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        interpreter_ = value;
        onChanged();
        return this;
      }

      private boolean verbose_ ;
      /**
       * <code>bool verbose = 6;</code>
       * @return The verbose.
       */
      public boolean getVerbose() {
        return verbose_;
      }
      /**
       * <code>bool verbose = 6;</code>
       * @param value The verbose to set.
       * @return This builder for chaining.
       */
      public Builder setVerbose(boolean value) {
        
        verbose_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool verbose = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearVerbose() {
        
        verbose_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object importFile_ = "";
      /**
       * <code>string import_file = 7;</code>
       * @return The importFile.
       */
      public java.lang.String getImportFile() {
        java.lang.Object ref = importFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          importFile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string import_file = 7;</code>
       * @return The bytes for importFile.
       */
      public com.google.protobuf.ByteString
          getImportFileBytes() {
        java.lang.Object ref = importFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          importFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string import_file = 7;</code>
       * @param value The importFile to set.
       * @return This builder for chaining.
       */
      public Builder setImportFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        importFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string import_file = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearImportFile() {
        
        importFile_ = getDefaultInstance().getImportFile();
        onChanged();
        return this;
      }
      /**
       * <code>string import_file = 7;</code>
       * @param value The bytes for importFile to set.
       * @return This builder for chaining.
       */
      public Builder setImportFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        importFile_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cc.arduino.cli.debug.DebugConfigReq)
    }

    // @@protoc_insertion_point(class_scope:cc.arduino.cli.debug.DebugConfigReq)
    private static final cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq();
    }

    public static cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DebugConfigReq>
        PARSER = new com.google.protobuf.AbstractParser<DebugConfigReq>() {
      @java.lang.Override
      public DebugConfigReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DebugConfigReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugConfigReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugConfigReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cc.arduino.cli.debug.DebugOuterClass.DebugConfigReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebugRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cc.arduino.cli.debug.DebugResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>string error = 2;</code>
     * @return The error.
     */
    java.lang.String getError();
    /**
     * <code>string error = 2;</code>
     * @return The bytes for error.
     */
    com.google.protobuf.ByteString
        getErrorBytes();
  }
  /**
   * <pre>
   * </pre>
   *
   * Protobuf type {@code cc.arduino.cli.debug.DebugResp}
   */
  public  static final class DebugResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cc.arduino.cli.debug.DebugResp)
      DebugRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DebugResp.newBuilder() to construct.
    private DebugResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugResp() {
      data_ = com.google.protobuf.ByteString.EMPTY;
      error_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DebugResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebugResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              error_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cc.arduino.cli.debug.DebugOuterClass.DebugResp.class, cc.arduino.cli.debug.DebugOuterClass.DebugResp.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int ERROR_FIELD_NUMBER = 2;
    private volatile java.lang.Object error_;
    /**
     * <code>string error = 2;</code>
     * @return The error.
     */
    public java.lang.String getError() {
      java.lang.Object ref = error_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        error_ = s;
        return s;
      }
    }
    /**
     * <code>string error = 2;</code>
     * @return The bytes for error.
     */
    public com.google.protobuf.ByteString
        getErrorBytes() {
      java.lang.Object ref = error_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        error_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      if (!getErrorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, error_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      if (!getErrorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, error_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cc.arduino.cli.debug.DebugOuterClass.DebugResp)) {
        return super.equals(obj);
      }
      cc.arduino.cli.debug.DebugOuterClass.DebugResp other = (cc.arduino.cli.debug.DebugOuterClass.DebugResp) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (!getError()
          .equals(other.getError())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getError().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cc.arduino.cli.debug.DebugOuterClass.DebugResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * </pre>
     *
     * Protobuf type {@code cc.arduino.cli.debug.DebugResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cc.arduino.cli.debug.DebugResp)
        cc.arduino.cli.debug.DebugOuterClass.DebugRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cc.arduino.cli.debug.DebugOuterClass.DebugResp.class, cc.arduino.cli.debug.DebugOuterClass.DebugResp.Builder.class);
      }

      // Construct using cc.arduino.cli.debug.DebugOuterClass.DebugResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        error_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cc.arduino.cli.debug.DebugOuterClass.internal_static_cc_arduino_cli_debug_DebugResp_descriptor;
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugResp getDefaultInstanceForType() {
        return cc.arduino.cli.debug.DebugOuterClass.DebugResp.getDefaultInstance();
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugResp build() {
        cc.arduino.cli.debug.DebugOuterClass.DebugResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cc.arduino.cli.debug.DebugOuterClass.DebugResp buildPartial() {
        cc.arduino.cli.debug.DebugOuterClass.DebugResp result = new cc.arduino.cli.debug.DebugOuterClass.DebugResp(this);
        result.data_ = data_;
        result.error_ = error_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cc.arduino.cli.debug.DebugOuterClass.DebugResp) {
          return mergeFrom((cc.arduino.cli.debug.DebugOuterClass.DebugResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cc.arduino.cli.debug.DebugOuterClass.DebugResp other) {
        if (other == cc.arduino.cli.debug.DebugOuterClass.DebugResp.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (!other.getError().isEmpty()) {
          error_ = other.error_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cc.arduino.cli.debug.DebugOuterClass.DebugResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cc.arduino.cli.debug.DebugOuterClass.DebugResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private java.lang.Object error_ = "";
      /**
       * <code>string error = 2;</code>
       * @return The error.
       */
      public java.lang.String getError() {
        java.lang.Object ref = error_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          error_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string error = 2;</code>
       * @return The bytes for error.
       */
      public com.google.protobuf.ByteString
          getErrorBytes() {
        java.lang.Object ref = error_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          error_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string error = 2;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setError(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string error = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        
        error_ = getDefaultInstance().getError();
        onChanged();
        return this;
      }
      /**
       * <code>string error = 2;</code>
       * @param value The bytes for error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        error_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cc.arduino.cli.debug.DebugResp)
    }

    // @@protoc_insertion_point(class_scope:cc.arduino.cli.debug.DebugResp)
    private static final cc.arduino.cli.debug.DebugOuterClass.DebugResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cc.arduino.cli.debug.DebugOuterClass.DebugResp();
    }

    public static cc.arduino.cli.debug.DebugOuterClass.DebugResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DebugResp>
        PARSER = new com.google.protobuf.AbstractParser<DebugResp>() {
      @java.lang.Override
      public DebugResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DebugResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cc.arduino.cli.debug.DebugOuterClass.DebugResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cc_arduino_cli_debug_DebugReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cc_arduino_cli_debug_DebugReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cc_arduino_cli_debug_DebugConfigReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cc_arduino_cli_debug_DebugConfigReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cc_arduino_cli_debug_DebugResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cc_arduino_cli_debug_DebugResp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021debug/debug.proto\022\024cc.arduino.cli.debu" +
      "g\032\025commands/common.proto\"h\n\010DebugReq\0226\n\010" +
      "debugReq\030\001 \001(\0132$.cc.arduino.cli.debug.De" +
      "bugConfigReq\022\014\n\004data\030\002 \001(\014\022\026\n\016send_inter" +
      "rupt\030\003 \001(\010\"\261\001\n\016DebugConfigReq\0223\n\010instanc" +
      "e\030\001 \001(\0132!.cc.arduino.cli.commands.Instan" +
      "ce\022\014\n\004fqbn\030\002 \001(\t\022\023\n\013sketch_path\030\003 \001(\t\022\014\n" +
      "\004port\030\004 \001(\t\022\023\n\013interpreter\030\005 \001(\t\022\017\n\007verb" +
      "ose\030\006 \001(\010\022\023\n\013import_file\030\007 \001(\t\"(\n\tDebugR" +
      "esp\022\014\n\004data\030\001 \001(\014\022\r\n\005error\030\002 \001(\t2W\n\005Debu" +
      "g\022N\n\005Debug\022\036.cc.arduino.cli.debug.DebugR" +
      "eq\032\037.cc.arduino.cli.debug.DebugResp\"\000(\0010" +
      "\001B*Z(github.com/arduino/arduino-cli/rpc/" +
      "debugb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cc.arduino.cli.commands.Common.getDescriptor(),
        });
    internal_static_cc_arduino_cli_debug_DebugReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cc_arduino_cli_debug_DebugReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cc_arduino_cli_debug_DebugReq_descriptor,
        new java.lang.String[] { "DebugReq", "Data", "SendInterrupt", });
    internal_static_cc_arduino_cli_debug_DebugConfigReq_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cc_arduino_cli_debug_DebugConfigReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cc_arduino_cli_debug_DebugConfigReq_descriptor,
        new java.lang.String[] { "Instance", "Fqbn", "SketchPath", "Port", "Interpreter", "Verbose", "ImportFile", });
    internal_static_cc_arduino_cli_debug_DebugResp_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_cc_arduino_cli_debug_DebugResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cc_arduino_cli_debug_DebugResp_descriptor,
        new java.lang.String[] { "Data", "Error", });
    cc.arduino.cli.commands.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
