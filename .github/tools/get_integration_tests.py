import itertools
from pathlib import Path
import json
import re


def get_test_functions(tests_path):
    test_functions_regex = re.compile(r"^def (test_[a-zA-Z_]*)\(")
    test_functions = []
    for test_file in tests_path.glob("test_*.py"):

        for line in test_file.read_text().splitlines():
            if match := test_functions_regex.match(line):
                test_functions.append(f"{test_file}::{match.group(1)}")
    return test_functions


if __name__ == "__main__":
    import sys

    tests_path = sys.argv[1]
    test_functions = get_test_functions(Path(tests_path))

    # We split the test functions in 80 different lists because the maximum jobs
    # that can be run on Github Workflows generated by the matrix syntax is 256.
    # Since we run all tests on Linux, Windows and Mac OS the number of this list
    # must be multiplied by 3. 80 * 3 == 240 so we're in the green.
    TESTS_SPLIT = 80
    cycle = itertools.cycle(range(TESTS_SPLIT))
    groups = [[] for _ in range(TESTS_SPLIT)]
    for f in test_functions:
        index = next(cycle)
        groups[index].append(f)

    print(json.dumps([" ".join(g) for g in groups]))
