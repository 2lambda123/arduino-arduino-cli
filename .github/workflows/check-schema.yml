name: Check JSON Schema

env:
  # See: https://github.com/actions/setup-node/#readme
  NODE_VERSION: 16.x

# See: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  create:
  push:
    paths:
      - ".github/workflows/check-schema.ya?ml"
      - "package.json"
      - "package-lock.json"
      - "configuration/configuration.schema.json"
  pull_request:
    paths:
      - ".github/workflows/check-schema.ya?ml"
      - "package.json"
      - "package-lock.json"
      - "configuration/configuration.schema.json"
  schedule:
    # Run weekly to catch breakage from external changes.
    - cron: "0 13 * * WED"
  workflow_dispatch:
  repository_dispatch:

permissions: {}

jobs:
  run-determination:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.determination.outputs.result }}
    steps:
      - name: Determine if the rest of the workflow should run
        id: determination
        run: |
          RELEASE_BRANCH_REGEX="refs/heads/[0-9]+.[0-9]+.x"
          # The `create` event trigger doesn't support `branches` filters, so it's necessary to use Bash instead.
          if [[
            "${{ github.event_name }}" != "create" ||
            "${{ github.ref }}" =~ $RELEASE_BRANCH_REGEX
          ]]; then
            # Run the other jobs.
            RESULT="true"
          else
            # There is no need to run the other jobs.
            RESULT="false"
          fi

          echo "result=$RESULT" >> $GITHUB_OUTPUT

  validate:
    name: Validate ${{ matrix.path }}
    needs: run-determination
    if: needs.run-determination.outputs.result == 'true'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # Paths of the schemas to validate.
        path:
          - ./configuration/configuration.schema.json

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: Validate JSON schema
        env:
          SCHEMA_PATH: ${{ matrix.path }}
        run: task --silent schema:validate
