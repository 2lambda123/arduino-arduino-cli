name: docs

on:
  pull_request:
    paths:
      # existing docs
      - 'docs/**'
      # changes to the cli reference generator
      - 'docsgen/**'
      # potential changes to commands documentation
      - 'cli/**'
      # potential changes to gRPC documentation
      - 'rpc/**'
      # changes to the workflow itself
      - '.github/workflows/docs.yaml'
  push:
    branches:
      - master
      # release branches have names like 0.8.x, 0.9.x, ...
      - '[0-9]+.[0-9]+.x'
    # At this day, GitHub doesn't support YAML anchors, d'oh!
    paths:
      - 'docs/**'
      - 'docsgen/**'
      - 'cli/**'
      - 'rpc/**'
      - '.github/workflows/docs.yaml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Taskfile
        uses: Arduino/actions/setup-taskfile@master
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v2-beta
        with:
          go-version: '1.14'

      - name: Install Go dependencies
        run: |
          go version
          go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc

      - name: Install protoc compiler
        uses: arduino/setup-protoc@v1.1.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
          architecture: 'x64'

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r ./requirements_docs.txt

      - name: Build docs website
        # This runs on every PR to ensure the docs build is sane, these docs
        # won't be published
        if: github.event_name == 'pull_request'
        run: task docs:build

      - name: Publish docs
        # Determine docs version for the commit pushed and publish accordingly using Mike.
        # Publishing implies creating a git commit on the gh-pages branch, we let
        # ArduinoBot own these commits.
        if: github.event_name == 'push'
        run: |
          git config --global user.email "bot@arduino.cc"
          git config --global user.name "ArduinoBot"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/gh-pages:refs/remotes/origin/gh-pages
          python docs/build.py
